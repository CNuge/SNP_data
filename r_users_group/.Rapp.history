AFS125_AC04q
AFS125_AC01_21=make.seq(AFS_125_twopt_hmq,c(47,676,52,306,309,409,459,617,911,1170,1188,1414,1462,1581,1752,1996,3695,3924,4697,220,999,1303,1425,280,395,421,537,601,754,809,879,1039,1248,1654,1788,4183,365,1420,1569,1849,2054,379,572,573,681,750,801,802,880,1067,1421,1544,4554,406,1160,1573,425,710,1827,3992,4142,496,1331,2030,576,1200,4218,586,3844,712,730,1022,1820,3724,3832,3871,916,1791,1863,1981,2084,4500,1046,1792,4352,1712,1853,1985,4361))#
AFS125_AC01_21#
#
AFS125_AC26_or_AFS125_AC27=make.seq(AFS_125_twopt_hmq,c(915,1148,1454,4173,57,67,582,1012,1031,1337,1911,4260))#
AFS125_AC26_or_AFS125_AC27#
#
AFS125_AC_16_or_AFS125_AC01_21=make.seq(AFS_125_twopt_hmq,c(371,1626,4151))#
AFS125_AC_16_or_AFS125_AC01_21#
#
AFS125_AC29_09_OR_18=make.seq(AFS_125_twopt_hmq,c(36,339))#
AFS125_AC29_09_OR_18#
#
AFS125_AC24_or_27=make.seq(AFS_125_twopt_hmq,c(526,804,3842))#
AFS125_AC24_or_27#
#
AFS125_AC24=make.seq(AFS_125_twopt_hmq,c(397,1233,4587,677,1520,1539,1640,1918,3737,4109,716,1068,726,1962,792,835,1341,1512,2081,3779,1231,4380))#
AFS125_AC24#
#
AFS125_AC28=make.seq(AFS_125_twopt_hmq,c(914,931,1006,1705,59,330,779,781,1193,1412,1660,1729,1768,2087,3939,3954,4259,4652,4692,664,4224,776,4147,4527))#
AFS125_AC28#
#
AFS125_AC02=make.seq(AFS_125_twopt_hmq,c(43,56,372,378,524,1041,1135,1161,1349,1567,1647,1815,1855,1891,2073,3662,4629,291,357,2006,438,896,1396,1611,2076,1056,1756,1878,3909,4620,1315,4157))#
AFS125_AC02#
#
AFS125_AC19=make.seq(AFS_125_twopt_hmq,c(85,255,284,328,490,579,591,786,794,883,969,984,1151,1171,1345,1483,1530,1533,1540,1565,1605,1612,1693,1723,1818,1917,2066,3847,3873,4345,4506,415,808,1036,1466,1471,1905,1926,467,492,1029))#
AFS125_AC19#
#
AFS125_AC04p=make.seq(AFS_125_twopt_hmq,c(127,290,337,346,491,538,616,831,842,850,1124,1219,1417,1670,3882,4102,4316,4337,4564,4592,402,1416,656,806))#
AFS125_AC04p#
#
AFS125_AC37_or_25=make.seq(AFS_125_twopt_hmq,c(169,1718))#
AFS125_AC37_or_25#
#
AFS125_AC01_or_AFS125_AC35=make.seq(AFS_125_twopt_hmq,c(2096,3765))#
AFS125_AC01_or_AFS125_AC35#
#
AFS125_AC09=make.seq(AFS_125_twopt_hmq,c(18,1359,20,86,361,373,678,934,1079,1211,1285,1433,1547,1598,1708,1836,1861,2053,4375,4555,4625,250,1062,1084,1314,1422,307,1023,1444,2014,4300,539,782,890,4079))#
AFS125_AC09#
#
AFS125_AC12=make.seq(AFS_125_twopt_hmq,c(414,437,502,1376,2038,3726,4278,4654))#
AFS125_AC12#
#
AFS125_AC17_or_AFS125_AC20=make.seq(AFS_125_twopt_hmq,c(1283,2001,3794,13,381,383,408,561,1044,1854,1899,4129))#
AFS125_AC17_or_AFS125_AC20#
#
AFS125_AC26_and_23=make.seq(AFS_125_twopt_hmq,c(544,593,877,1033,1185,1400,1837))#
AFS125_AC26_and_23#
#
AFS125_AC25=make.seq(AFS_125_twopt_hmq,c(170,1549,244,254,331,433,483,736,737,742,866,983,1174,1267,1311,1382,1644,1747,2039,2050,3690,3923,4172,4201,4439))#
AFS125_AC25#
#
AFS125_AC04q=make.seq(AFS_125_twopt_hmq,c(14,193,382,574,599,623,699,767,839,875,947,997,998,1052,1165,1293,1312,1322,1340,1474,1634,1679,1793,1946,2035,4011,4264,4309,4473,4495,4676,99,405,510,577,581,583,596,606,635,645,646,698,707,728,773,844,864,895,921,985,1018,1037,1093,1141,1179,1208,1222,1240,1253,1286,1357,1393,1403,1472,1486,1519,1614,1672,1682,1686,1711,1713,1780,1986,1999,2079,3763,4070,4252,4341,4398,4614,533,768,929,1802,1889,4557,575,1004,1704,633,1602,1789,735,4663,1806,4552))#
AFS125_AC04q#
#
AFS125_AC10=make.seq(AFS_125_twopt_hmq,c(19,41,404,927,1010,1082,1266,1423,1546,1552,1856,1913,1936,3740,3822,4034,4111,45,458,525,2024,4128,387,658,907,1045,1110,1270,1928,3732,3857,669,912,1152,1194,3792,3875,4124,4207,863,1202,1371,3823,1024,1764))#
AFS125_AC10#
#
AFS125_AC25_AND_AFS125_AC18=make.seq(AFS_125_twopt_hmq,c(66,106,128,278,401,705,719,760,775,807,860,977,1043,1146,1181,1366,1448,1497,1556,1596,1600,1641,1745,1758,1850,1898,3836,3965,4071,4097,4480,4508,4563,4569))#
AFS125_AC25_AND_AFS125_AC18#
#
AFS125_AC25_or_37=make.seq(AFS_125_twopt_hmq,c(488,1426))#
AFS125_AC25_or_37#
#
AFS125_AC07=make.seq(AFS_125_twopt_hmq,c(79,145,227,443,480,501,625,780,811,900,953,968,1065,1098,1305,1368,1398,1406,1473,1527,1563,1726,1757,1841,1982,2088,3796,3830,3932,3994,4015,4381,4515,261,902,1624,1739,2012))#
AFS125_AC07#
#
AFS125_AC33=make.seq(AFS_125_twopt_hmq,c(22,125,362,571,1136,1374,1687,1830,1916,1922,2017,3854,3889,4246,4343,4649,4681,286,1961,938,4474))#
AFS125_AC33#
#
AFS125_AC26=make.seq(AFS_125_twopt_hmq,c(175,440,471,619,700,749,932,1191,1235,1277,1302,1555,1786,4007,4243,4394,242,311,452,481,685,785,1061,1175,1190,1268,1306,1317,1409,1601,1621,1674,1910,1921,1994,2016,3720,4005,4255,4377,4672,559,4165,837,1536,1028,3661))#
AFS125_AC26#
#
AFS125_AC37=make.seq(AFS_125_twopt_hmq,c(80,295,605,841,897,925,1210,1300,1481,1584,1592,1625,1888,1895,3793,4298,4315,165,602,706,731,973,1077,1372,1574,1576,1822,1976,2080,4160,4195,188,324,364,862,1117,1121,1140,1196,1514,1566,1653,1748,1894,1904,3976,4112,4368,4409))#
AFS125_AC37#
#
AFS125_AC04q_or_AFS125_AC16=make.seq(AFS_125_twopt_hmq,c(61,218,4267,439,876,1964,321,388,724,1122))#
AFS125_AC04q_or_AFS125_AC16#
#
AFS125_AC23=make.seq(AFS_125_twopt_hmq,c(11,663,670,922,1001,1074,1101,1509,1535,1651,1659,1955,1990,4411,4604,4677,637,1831,1840,4332,729,1589))#
AFS125_AC23#
#
AFS125_AC22=make.seq(AFS_125_twopt_hmq,c(281,649,885,1373))#
AFS125_AC22#
#
AFS125_AC34=make.seq(AFS_125_twopt_hmq,c(299,3700,4001))#
AFS125_AC34#
#
AFS125_AC20=make.seq(AFS_125_twopt_hmq,c(432,1370,2027,4025,173,580,791,795,935,1105,1118,1310,1330,1335,1548,1813,1824,2097,3777,4349,4445,4449,333,442,701,1133,1609,1799,3647,4348,454,787,1026,460,954,1658,505,868,1522,1534,1890,3748,4134,4162,4179,4302,682,1839,901,4364,1071,1097,266,867,1058,1461,1652,1808,1826,1873,1940,4131,4296,909,1860,1053,1942,1773,2046))#
AFS125_AC20#
#
AFS125_AC05=make.seq(AFS_125_twopt_hmq,c(516,872,948,980,1542,1972,631,783,869,1116,1244,1707,1846,3696,3821,3987,691,708,720,1183,1571))#
AFS125_AC05#
#
AFS125_AC06=make.seq(AFS_125_twopt_hmq,c(229,587,630,819,962,1147,1361,1610,1779,1960,2015,4581,1881,2047,3962))#
AFS125_AC06#
#
AFS125_AC23_OR_13_14=make.seq(AFS_125_twopt_hmq,c(68,322,340,468,563,1288,3848,3950,679,1629,4010))#
AFS125_AC23_OR_13_14#
#
AFS125_AC17_or_AFS125_AC18=make.seq(AFS_125_twopt_hmq,c(1125,4610,1139,4488,1167,3660,1169,1320,1595,1740,2098,210,1155,1325,1451,1710,1775,3969,4003,4456))#
AFS125_AC17_or_AFS125_AC18#
#
AFS125_AC16=make.seq(AFS_125_twopt_hmq,c(31,192,419,739,1367,1582,1586,1619,3693,4056,4370,534,771,1903,687,4602,713,4443,942,1094,1204,1722,1867,1883))#
AFS125_AC16#
#
AFS125_AC17=make.seq(AFS_125_twopt_hmq,c(247,3943,320,693,956,1254,384,411,718,1168,1276,1575,1666,1885,4402,4536,686,711,1714,2089,2092,4222,1112,4126,1342,4467))#
AFS125_AC17#
#
AFS125_AC_14_13=make.seq(AFS_125_twopt_hmq,c(1,83,249,332,367,447,464,473,513,530,535,560,684,715,734,793,797,817,905,964,1034,1078,1086,1103,1132,1144,1236,1257,1290,1326,1402,1408,1439,1450,1550,1554,1594,1617,1671,1695,1753,1785,1798,1920,2056,2078,3656,3736,3804,3807,3812,3872,3884,4118,4148,4231,4329,4420,4520,398,417,522,1054,1085,1452,2059,3680,3970))#
AFS125_AC_14_13#
#
AFS125_AC04_or_08=make.seq(AFS_125_twopt_hmq,c(566,1663,4576,97,117,3691,4404,689,1083,1347,3682))#
AFS125_AC04_or_08#
#
AFS125_AC08=make.seq(AFS_125_twopt_hmq,c(163,536,1643,4519,316,960,1778,334,548,1622,1932,3789,3935,4139,657,1805,3768,671,763))#
AFS125_AC08#
#
AFS125_AC14_or_AFS125_AC20=make.seq(AFS_125_twopt_hmq,c(845,4529))#
AFS125_AC14_or_AFS125_AC20#
#
AFS125_AC11=make.seq(AFS_125_twopt_hmq,c(157,815,1072,1137,1289,1432,1636,1858,1929,2061,4028,4342,4531,4549,195,248,463,542,853,855,1230,1413,1685,1847,1901,1941,3833,3906,4044,830,1246,950,1848,4509,1119,1395,2004,3752,1199,1280,1529,4170,4464))#
AFS125_AC11#
#
AFS125_AC27=make.seq(AFS_125_twopt_hmq,c(16,87,1087,4277,4640,149,824,1328,1489,3948,4018,4568,287,300,394,904,1123,1470,1545,1794,1907,2086,607,1221,1282,1501,1648,1738,1865,1924,2005,2023,3880,4412,4484))#
AFS125_AC27#
#
AFS125_AC15=make.seq(AFS_125_twopt_hmq,c(69,350,479,694,1239,1431,1678,215,1683,1975,4516,4606,636,1446))#
AFS125_AC15#
#
AFS125_AC12_or_AFS125_AC24=make.seq(AFS_125_twopt_hmq,c(347,3877,1662,4699))#
AFS125_AC12_or_AFS125_AC24#
#
AFS125_AC36=make.seq(AFS_125_twopt_hmq,c(102,336,532,589,640,697,788,798,814,884,970,986,1042,1391,1397,1468,1494,1656,1769,1774,1866,1919,2033,2044,2068,3817,3870,4066,4085,4331,4618,4656,294,520,314,662,930,961,1392,1442,4073,4145,353,696,1415,1995,971,1727,1817,1811,4599))#
AFS125_AC36#
#
AFS125_AC03=make.seq(AFS_125_twopt_hmq,c(303,1354,4624,445,546,836,1390,1440,498,1120,3780,551,1577,738,1998,4425,778,1499,834,1057,1938,2029,939,3760,1048,1164,1334))#
AFS125_AC03#
#
AFS125_AC18=make.seq(AFS_125_twopt_hmq,c(179,937,1751,2043,256,276,652,1721,1765,1989,4307,4537,4577,632,1524,1553,2063,3862,3864,4376))#
AFS125_AC18#
#
Big_blob=make.seq(AFS_125_twopt_hmq,c(146,198,219,427,598,746,818,908,1492,1835,4214,257,595,1201,4103,1493,4597,298,345,957,1203,1216,183,590,609,641,859,1362,1518,1630,1633,1782,2028,4067,4081,3957,4659,910,1292,1523,1959,2018,2019,4521,1691,3644,4705,620,825,1149,4175,1665,493,888,1329,1456,4392,391,1273,741,955,1572,1803,4695,600,856,943,996,3679,3689,4144,143,944,1027,1441,3805,4463,4608,1588,4651,161,251,500,2009,2070,4171,1016,1407,1646,3988,399,545,1050,1607,1613,3795,4628,627,1032,1438,4229,461,993,1308,1816,4043,752,4664,270,508,769,1418,1703,3955,4469,4560,76,355,603,2031,1130,919,4427,2057,10,317,821,1251,1316,1419,1772,3683,3961,4422,4596,465,762,1318,3678,3702,12,17,24,38,46,70,72,89,108,115,121,124,134,150,166,206,216,228,241,265,273,279,282,293,297,315,335,338,342,351,354,358,360,363,366,368,370,386,392,407,416,418,423,426,429,431,434,470,476,478,485,489,506,529,540,553,557,558,562,564,585,592,608,610,611,612,618,634,639,644,648,651,660,672,675,683,690,714,717,721,723,725,740,744,759,774,784
,789,796,800,803,805,816,823,826,829,838,840,843,847,848,852,870,873,891,893,898,899,913,918,920,924,941,949,966,974,976,979,1000,1002,1007,1015,1017,1019,1025,1038,1040,1047,1051,1059,1063,1064,1070,1080,1088,1107,1109,1126,1127,1128,1134,1145,1158,1163,1166,1180,1182,1195,1217,1228,1229,1234,1241,1242,1245,1247,1255,1256,1264,1272,1287,1304,1307,1323,1338,1343,1346,1352,1355,1356,1358,1360,1364,1378,1384,1385,1387,1388,1389,1401,1404,1405,1428,1443,1447,1453,1463,1480,1491,1495,1505,1506,1507,1537,1541,1551,1560,1562,1568,1579,1580,1597,1599,1616,1618,1627,1632,1638,1649,1655,1661,1668,1669,1688,1692,1697,1700,1709,1715,1717,1728,1731,1737,1741,1742,1743,1744,1754,1755,1760,1771,1776,1777,1781,1784,1790,1795,1797,1804,1807,1809,1812,1821,1823,1828,1832,1833,1834,1838,1842,1852,1871,1872,1874,1880,1884,1887,1893,1897,1900,1902,1908,1912,1915,1927,1930,1934,1935,1937,1951,1953,1956,1958,1965,1968,1969,1977,1978,1991,1992,2002,2003,2008,2010,2011,2013,2034,2040,2067,2069,2090,2091,2095,2100,2105,3642,3645,36
92,3711,3730,3753,3769,3770,3772,3775,3785,3803,3808,3811,3827,3860,3874,3876,3893,3904,3913,3931,3934,3958,3959,3968,3990,3991,4024,4026,4046,4051,4058,4061,4074,4086,4093,4101,4117,4137,4163,4166,4181,4209,4227,4234,4237,4249,4283,4286,4297,4299,4311,4313,4339,4373,4397,4415,4423,4426,4434,4450,4462,4478,4491,4504,4507,4510,4518,4534,4544,4550,4551,4595,4639,4666,4669,4684,4685))#
Big_blob#
#
AFS125_AC35_or_AFS125_AC01=make.seq(AFS_125_twopt_hmq,c(15,933,1220,1967,4502,4590,474,3856))#
AFS125_AC35_or_AFS125_AC01#
#
AFS125_AC04_or_16=make.seq(AFS_125_twopt_hmq,c(702,1819,4232,989,1677,1724,1859,3797,4013))#
AFS125_AC04_or_16#
#
AFS125_AC13_34=make.seq(AFS_125_twopt_hmq,c(75,951,958,1008,1021,1162,1399,1767,1851,2022,3890,4390))#
AFS125_AC13_34#
#
AFS125_AC29=make.seq(AFS_125_twopt_hmq,c(23,120,422,435,624,692,1430,2074,3800,3949,4436,65,327,1218,1516))#
AFS125_AC29#
#
UNK=make.seq(AFS_125_twopt_hmq,c(37,1209,95,1114,116,813,4690,133,200,4535,135,857,177,3930,186,1269,1702,4108,246,1184,267,523,1394,1502,275,1490,1681,319,642,349,4444,403,519,413,1868,457,604,469,766,1187,3952,521,680,528,628,531,1381,653,1215,703,3865,704,4481,732,1642,777,828,4395,812,3866,849,1945,858,4650,903,4312,945,3786,952,1701,967,3903,1049,3831,1207,1657,1212,3845,1294,1733,1488,4256,1532,4016,1590,4221,1631,4646,1690,4088,1770,4486,1862,4354,1993,4617,2036,4353,2075,3941,2093,3764))#
UNK#
#
AFS125_AC01_and_04or08=make.seq(AFS_125_twopt_hmq,c(148,325,369,1092,1131,1351,1459,1720,1875,1906,1931,1944,1983,2025,4330,4559,4643))#
AFS125_AC01_and_04or08#
#
AFS125_AC25_OR_27=make.seq(AFS_125_twopt_hmq,c(42,393,1521,1680,4706))#
AFS125_AC25_OR_27#
#
AFS125_AC31=make.seq(AFS_125_twopt_hmq,c(226,547,567,578,622,666,790,965,1100,1153,1214,1284,1482,1500,1606,1877,2048,3825,4063,4276,4369,4703,756,1719,109,123,205,230,313,318,341,348,375,477,594,659,673,745,755,894,926,975,982,991,995,1102,1262,1496,1732,1734,1879,1914,2037,3739,3861,4130,4261,4418,4435,4499))#
AFS125_AC31#
#
AFS125_AC07_or_AFS125_AC28=make.seq(AFS_125_twopt_hmq,c(1205,1587,3668,329,1227,450,1206,1645,1706,3766,3901,4200,4665,1464,1603,1948,243,466,946,988,1129,1478,1637,1909,3755,3886,4440))#
AFS125_AC07_or_AFS125_AC28#
#
AFS125_AC13=make.seq(AFS_125_twopt_hmq,c(44,304,963,1159,1225,4387,132,833,1696,4702,158,207,424,517,650,1009,1075,1238,1243,1295,1635,1759,3754,3911,4325,302,990,1142,1237,1973,4400,448,665,668,1763,1947,2042,3936))#
AFS125_AC13#
#
AFS125_AC14=make.seq(AFS_125_twopt_hmq,c(252,1943,4248,674,1299,1987,1035,4180,1096,1963,1749,4284,103,180,820,1735))#
AFS125_AC14#
#
AFS125_AC30_AFS125_AC32=make.seq(AFS_125_twopt_hmq,c(5,26,597,757,917,1014,1172,1350,1424,1620,1716,2007,2049,2085,3735,3929,288,1177,310,1223,472,497,832,3744,4674,514,1800,1876,1979,549,722,4636,550,1369,747,1301,1950,2026,981,1030,1265,1297,1487,1870,4378,994,1281,1966,1076,4035,98,389,436,667,733,1111,1113,1271,1344,1379,1476,1673,1736,1761,2058,3699,3719,3868,3940,4190))#
AFS125_AC30_AFS125_AC32#
#
AFS125_AC_09_29_18=make.seq(AFS_125_twopt_hmq,c(1363,1528,3813,4613))#
AFS125_AC_09_29_18#
AFS125_AC_14_13_group = group(AFS125_AC_14_13,LOD = 3)#
AFS125_AC01_21_group = group(AFS125_AC01_21,LOD = 3)#
AFS125_AC02_group = group(AFS125_AC02,LOD = 3)#
AFS125_AC03_group = group(AFS125_AC03,LOD = 3)#
AFS125_AC04p_group = group(AFS125_AC04p,LOD = 3)#
AFS125_AC04q_group = group(AFS125_AC04q,LOD = 3)#
AFS125_AC05_group = group(AFS125_AC05,LOD = 3)#
AFS125_AC06_group = group(AFS125_AC06,LOD = 3)#
AFS125_AC07_group = group(AFS125_AC07,LOD = 3)#
AFS125_AC08_group = group(AFS125_AC08,LOD = 3)#
AFS125_AC09_group = group(AFS125_AC09,LOD = 3)#
AFS125_AC10_group = group(AFS125_AC10,LOD = 3)#
AFS125_AC11_group = group(AFS125_AC11,LOD = 3)#
AFS125_AC12_group = group(AFS125_AC12,LOD = 3)#
AFS125_AC13_group = group(AFS125_AC13,LOD = 3)#
AFS125_AC14_group = group(AFS125_AC14,LOD = 3)#
AFS125_AC15_group = group(AFS125_AC15,LOD = 3)#
AFS125_AC16_group = group(AFS125_AC16,LOD = 3)#
AFS125_AC17_group = group(AFS125_AC17,LOD = 3)#
AFS125_AC18_group = group(AFS125_AC18,LOD = 3)#
AFS125_AC19_group = group(AFS125_AC19,LOD = 3)#
AFS125_AC20_group = group(AFS125_AC20,LOD = 3)#
AFS125_AC22_group = group(AFS125_AC22,LOD = 3)#
AFS125_AC23_group = group(AFS125_AC23,LOD = 3)#
AFS125_AC24_group = group(AFS125_AC24,LOD = 3)#
AFS125_AC25_group = group(AFS125_AC25,LOD = 3)#
AFS125_AC26_group = group(AFS125_AC26,LOD = 3)#
AFS125_AC27_group = group(AFS125_AC27,LOD = 3)#
AFS125_AC28_group = group(AFS125_AC28,LOD = 3)#
AFS125_AC29_group = group(AFS125_AC29,LOD = 3)#
AFS125_AC30_AFS125_AC32_group = group(AFS125_AC30_AFS125_AC32,LOD = 3)#
AFS125_AC31_group = group(AFS125_AC31,LOD = 3)#
AFS125_AC33_group = group(AFS125_AC33,LOD = 3)#
AFS125_AC34_group = group(AFS125_AC34,LOD = 3)#
AFS125_AC36_group = group(AFS125_AC36,LOD = 3)#
AFS125_AC37_group = group(AFS125_AC37,LOD = 3)#
Big_blob_group = group(Big_blob,LOD = 3)#
AFS125_AC01_and_04or08_group = group(AFS125_AC01_and_04or08,LOD = 3)#
AFS125_AC01_or_AFS125_AC35_group = group(AFS125_AC01_or_AFS125_AC35,LOD = 3)#
AFS125_AC_09_29_18_group = group(AFS125_AC_09_29_18,LOD = 3)#
AFS125_AC04_or_08_group = group(AFS125_AC04_or_08,LOD = 3)#
AFS125_AC04q_or_AFS125_AC16_group = group(AFS125_AC04q_or_AFS125_AC16,LOD = 3)#
AFS125_AC07_or_AFS125_AC28_group = group(AFS125_AC07_or_AFS125_AC28,LOD = 3)#
AFS125_AC12_or_AFS125_AC24_group = group(AFS125_AC12_or_AFS125_AC24,LOD = 3)#
AFS125_AC13_34_group = group(AFS125_AC13_34,LOD = 3)#
AFS125_AC14_or_AFS125_AC20_group = group(AFS125_AC14_or_AFS125_AC20,LOD = 3)#
AFS125_AC04_or_16_group = group(AFS125_AC04_or_16,LOD = 3)#
AFS125_AC_16_or_AFS125_AC01_21_group = group(AFS125_AC_16_or_AFS125_AC01_21,LOD = 3)#
AFS125_AC17_or_AFS125_AC18_group = group(AFS125_AC17_or_AFS125_AC18,LOD = 3)#
AFS125_AC17_or_AFS125_AC20_group = group(AFS125_AC17_or_AFS125_AC20,LOD = 3)#
AFS125_AC23_OR_13_14_group = group(AFS125_AC23_OR_13_14,LOD = 3)#
AFS125_AC24_or_27_group = group(AFS125_AC24_or_27,LOD = 3)#
AFS125_AC25_AND_AFS125_AC18_group = group(AFS125_AC25_AND_AFS125_AC18,LOD = 3)#
AFS125_AC25_OR_27_group = group(AFS125_AC25_OR_27,LOD = 3)#
AFS125_AC25_or_37_group = group(AFS125_AC25_or_37,LOD = 3)#
AFS125_AC26_and_23_group = group(AFS125_AC26_and_23,LOD = 3)#
AFS125_AC26_or_AFS125_AC27_group = group(AFS125_AC26_or_AFS125_AC27,LOD = 3)#
AFS125_AC29_09_OR_18_group = group(AFS125_AC29_09_OR_18,LOD = 3)#
AFS125_AC35_or_AFS125_AC01_group = group(AFS125_AC35_or_AFS125_AC01,LOD = 3)#
AFS125_AC37_or_25_group = group(AFS125_AC37_or_25,LOD = 3)#
UNK_group = group(UNK,LOD = 3)#
#
#Look_at_groups#
#analyze in systematic manner
AFS125_AC04q
AFS125_AC04p_group
AFS125_AC04q_group
frag_1_and_AC04q = merge_compare(AFS125_AC01_and_04or08_group, AFS125_AC04q, AFS_125_twopt_hmq)
frag_1_and_AC04q
AFS125_AC04p_group
AFS125_AC01_and_04or08_group
frag_1_and_AC04p
frag_1_and_AC01_21 = merge_compare(AFS125_AC01_and_04or08_group, AFS125_AC01_21, AFS_125_twopt_hmq)
frag_1_and_AC01_21
frag_1_and_AC08 = merge_compare(AFS125_AC01_and_04or08_group, AFS125_AC08, AFS_125_twopt_hmq)
frag_1_and_AC08
frag_2_and_AC01_21 = merge_compare(AFS125_AC01_or_AFS125_AC35_group, AFS125_AC01_21, AFS_125_twopt_hmq)
frag_2_and_AC08
frag_2_and_AC01_21
AFS125_AC01_or_AFS125_AC35_group
LOD3_AFS_125_hmq_ALGs.male = group(AFS_125_hmq.male, LOD=3)#
LOD3_AFS_125_hmq_ALGs.female = group(AFS_125_hmq.female , LOD=3)#
Lod_3_AFS125_Male = Linkage_group_output(LOD3_AFS_125_hmq_ALGs.male,3,AFS_125_high_med_quality.fam)#
#
Lod_3_AFS125_Female = Linkage_group_output(LOD3_AFS_125_hmq_ALGs.female,3,AFS_125_high_med_quality.fam)#
write.table(Lod_3_AFS125_Male,'Lod_3_AFS125_Male.txt',sep='\t', quote=FALSE)#
write.table(Lod_3_AFS125_Female,'Lod_3_AFS125_Female.txt',sep='\t', quote=FALSE)
LOD3_AFS_126_hmq_ALGs.male = group(AFS_126_hmq.male, LOD =3)#
LOD3_AFS_126_hmq_ALGs.female = group(AFS_126_hmq.female, LOD =3)#
Lod_3_AFS126_Male = Linkage_group_output(LOD3_AFS_126_hmq_ALGs.male,3,AFS_126_high_med_quality.fam)#
Lod_3_AFS126_Female = Linkage_group_outputLOD3_AFS_126_hmq_ALGs.female,3,AFS_126_high_med_quality.fam)#
write.table(Lod_3_AFS126_Male,'Lod_3_AFS126_Male.txt',sep='\t', quote=FALSE)#
write.table(Lod_3_AFS126_Female,'Lod_3_AFS126_Female.txt',sep='\t', quote=FALSE)
Lod_3_AFS125_Female
LOD3_AFS_125_hmq_ALGs.female = group(AFS_125_hmq.female , LOD=3)
LOD3_AFS_125_hmq_ALGs.female
Lod_3_AFS126_Female = Linkage_group_output(LOD3_AFS_126_hmq_ALGs.female,3,AFS_126_high_med_quality.fam)
write.table(Lod_3_AFS126_Female,'Lod_3_AFS126_Female.txt',sep='\t', quote=FALSE)
LOD3_AFS_126_hmq_ALGs.female = group(AFS_126_hmq.female, LOD =3)
save.image("AFS_125_126.RData")
?pnorm
pnorm(190.5,177.6,9.7)-pnorm(157.5,177.6,9.7)
?pnorm
pnorm(190.5,177.6,9.7)
pnorm(157.5,177.6,9.7)
pnorm(190.5,177.6,9.7)-pnorm(157.5,177.6,9.7)
plot(pnorm(190.5,177.6,9.7))
?qqnorm()
example_dat = read.csv('stickleback.csv')
setwd('/Users/Cam/Documents/STAT*2230')
example_dat = read.csv('stickleback.csv')
qqnorm(example_dat)
example_dat = read.csv('health.csv')
qqnorm(example_dat)
example_dat = read.csv('health.csv',header=T)
example_dat
qqnorm(example_dat)
qqnorm(health)
example_dat = read.csv('health.csv',header=T)
expend = health$Expenditure
qqnorm(expend)
expend = health$Expenditure
expend = example_dat$Expenditure
qqnorm(expend)
?qqline
?qqline(expend)
qqline(expend)
sleepy = read.table('insonmia.txt')
sleepy = read.table('insomnia.txt')
sleepy
sleepy = read.table('insomnia.txt',header=TRUE)
sleepy
mean(sleepy$SLEEPTIME)
sleepy
pnorm(5.9,15,10)
dnorm(0)
lb = 177.6 - 30
ub = 177.6 + 30
x = seq(lb, ub , length = 100)
hx = dnorm(x)
ylab="Density", main="Comparison of t Distributions")
plot(x, hx, type="l")
plot(x, hx, type="l", lty=2, xlab="x value")
x = seq(lb, ub , length = 100)
hx = dnorm(x)
plot(x, hx, type="l", lty=2, xlab="x value")
set.seed(3000)#
xseq<-seq(-4,4,.01)#
densities<-dnorm(xseq, 0,1)#
cumulative<-pnorm(xseq, 0, 1)#
randomdeviates<-rnorm(1000,0,1)#
par(mfrow=c(1,3), mar=c(3,4,4,2))#
#
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, cex=2, main="PDF of Standard Normal", cex.axis=.8)
plot(xseq, densities)
xseq<-seq(lb,ub,.01)
densities<-dnorm(xseq, 0,1)
cumulative<-pnorm(xseq, 0, 1)
randomdeviates<-rnorm(1000,0,1)
par(mfrow=c(1,3), mar=c(3,4,4,2))
plot(xseq, densities)
set.seed(3000)#
xseq<-seq(-4,4,.01)#
densities<-dnorm(xseq, 0,1)#
cumulative<-pnorm(xseq, 0, 1)#
randomdeviates<-rnorm(1000,0,1)#
par(mfrow=c(1,3), mar=c(3,4,4,2))#
#
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, cex=2, main="PDF of Standard Normal", cex.axis=.8)#
plot(x, hx, type="l", lty=2, xlab="x value")
set.seed(3000)#
xseq<-seq(-4,4,.01)#
densities<-dnorm(xseq, 0,1)#
cumulative<-pnorm(xseq, 0, 1)#
randomdeviates<-rnorm(1000,0,1)#
par(mfrow=c(1,3), mar=c(3,4,4,2))#
#
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, cex=2, main="PDF of Standard Normal", cex.axis=.8)
plot(xseq, densities)
xseq<-seq((177.6 - 30),(177.6 + 30),.01)
densities<-dnorm(xseq, 0,1)
cumulative<-pnorm(xseq, 0, 1)
randomdeviates<-rnorm(1000,0,1)
par(mfrow=c(1,3), mar=c(3,4,4,2))
plot(xseq, densities)
xseq<-seq((177.6 - 30),(177.6 + 30),1)
plot(xseq, densities)
xseq<-seq(150,200,.01)
plot(xseq, densities)
set.seed(3000)#
xseq<-seq(-4,4,.01)#
densities<-dnorm(xseq, 0,1)#
cumulative<-pnorm(xseq, 0, 1)#
randomdeviates<-rnorm(1000,0,1)#
par(mfrow=c(1,3), mar=c(3,4,4,2))#
#
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, cex=2, main="PDF of Standard Normal", cex.axis=.8)#
#how wo
set.seed(3000)#
xseq<-seq(-4,4,.01)#
densities<-dnorm(xseq, 0,1)#
cumulative<-pnorm(xseq, 0, 1)#
randomdeviates<-rnorm(1000,0,1)#
par(mfrow=c(1,3), mar=c(3,4,4,2))#
#
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, cex=2, main="Recall: Standard Normal")
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2,  main="Recall: Standard Normal")
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, main="Recall: Standard Normal")
xseq<-seq(-4,4,.01)#
densities<-dnorm(xseq, 0,1)#
cumulative<-pnorm(xseq, 0, 1)#
randomdeviates<-rnorm(1000,0,1)#
par(mfrow=c(1,3), mar=c(3,4,4,2))#
#
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, main="Recall: Standard Normal")
xseq<-seq(-4,4,.01)#
densities<-dnorm(xseq, 0,1)#
cumulative<-pnorm(xseq, 0, 1)#
randomdeviates<-rnorm(1000,0,1)#
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, main="Recall: Standard Normal")
setwd('/Users/Cam/Documents/STAT*2230')
options(prompt='R> ')
options(continue = '\t')
?pnorm
sleepy = read.table('insomnia.txt',header=TRUE)
sleepy
sleepy_a = read.table('insomnia.txt')
sleepy_a
xseq<-seq(-4,4,.01)#
densities<-dnorm(xseq, 0,1)#
cumulative<-pnorm(xseq, 0, 1)#
randomdeviates<-rnorm(1000,0,1)#
#
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, main="Recall: Standard Normal")
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, main="Recall: Standard Normal Dist")
?pnorm
xseq<-seq(-4,4,.01)#
densities<-dnorm(xseq, 0,1)#
cumulative<-pnorm(xseq, 0, 1)#
randomdeviates<-rnorm(1000,0,1)#
#
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, main="Recall: Standard Normal Dist")
pnorm(190.5,177.6,9.7)
pnorm(157.5,177.6,9.7)
?qqnorm()
example_dat = read.csv('health.csv',header=T)
expend = example_dat$Expenditure
qqnorm(expend)
?qqline
qqline(expend)
sleepy_a = read.table('insomnia.txt')
sleepy_a
sleepy = read.table('insomnia.txt',sep='\t',header=TRUE)
sleepy
getwd()
skid_dat=c(488,350,457,199,285,409,435,574,439,546,385,295,184,261,273,400,311,312,141,425)
qqnorm(expend)
setwd('/Users/Cam/Documents/STAT*2230')#
getwd()#
ls()#
options(prompt='R> ')#
options(continue = '\t')
xseq<-seq(-4,4,.01)#
densities<-dnorm(xseq, 0,1)#
cumulative<-pnorm(xseq, 0, 1)#
randomdeviates<-rnorm(1000,0,1)#
#
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, main="Recall: Standard Normal Dist")
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, main="Recall: Standard Normal Dist and pnorm()")
?pnorm
pnorm(190.5,177.6,9.7)
qqnorm(expend)
example_dat = read.csv('health.csv',header=T)#
#
expend = example_dat$Expenditure#
qqnorm(expend)
qqline(expend)
sleepy_a = read.table('insomnia.txt')
sleepy_a
sleepy = read.table('insomnia.txt',sep='\t',header=T)
sleepy
sleepy = read.table('insomnia.txt',sep='\t',header=T)
sleepy
r_x = 1/x
x = 25
r_x = 1/x
getwd()
canine = c(10.2,10.4,9.9,10.7,10.3,9.7,10.3,10.7,10.1,10.6,10.3,10.0,10.2,10.1,10.3,9.9,9.7,10.6,10.4,10.1,10.6,10.3,10.3,10.5,10.2,10.2,10.5,10.1,11.2,10.5,10.3,10.0,10.3,10.7,11.1)
qqnorm(canine,main="QQ-plot for canine-molar distance")
qqline(canine)
boxplot(canine,main="Box plot for canine-molar distance")
mean(canine)
sd(canine)
qt(0.995,34)
data = read.csv("guessing.csv",header=F)
guesses = data$V1
data
guesses = data$V1
(mean(guesses)-0)/(sd(guesses)/sqrt(length(guesses)))
1-pt(2.84,84)
t.test(guesses,mu=0,alternative="greater")
?qt
ls()
rm(list=ls())
ls()
getwd()
setwd("/Users/Cam")
getwd()
ls()
1-pnorm(358.45,320,22.36)
pnorm(358.45,320,22.36)
?pnorm
AC01_21=make.seq(AFS_CZRI_73_progeny.fam,c(14,24,350,365,366,367,368,381,451,455,466,482,490,494,520,531,541,550,556,557,558,574,575,581,612,616,630,648,681,702,712,725,737,749,787,844,1089,20,798,405,423,434,519,614,645,647,669,706,764,796,1007,1015,1101,1118,441,627,760,1033,496,504,341))#
AC01_21#
#
AC02=make.seq(AFS_CZRI_73_progeny.fam,c(337,421,427,433,474,553,560,582,653,809,873,1025,1043,1046,1104,1180,1186,431))#
AC02#
#
AC03=make.seq(AFS_CZRI_73_progeny.fam,c(388,446,458,464,475,515,577,590,641,1027,1061,1085,422,591))#
AC03#
#
AC04p=make.seq(AFS_CZRI_73_progeny.fam,c(334,369,416,445,450,530,566,570,865,876,1047,1053,1175,1188))#
AC04p#
#
AC04q=make.seq(AFS_CZRI_73_progeny.fam,c(356,358,407,472,597,615,621,644,661,753,840,851,1039,1057,1074))#
AC04q#
#
AC05=make.seq(AFS_CZRI_73_progeny.fam,c(487,513,518,823,874,1017))#
AC05#
#
AC06=make.seq(AFS_CZRI_73_progeny.fam,c(432,500,521,547,563,622,670,700,810,837,845,1004,1028,1034,1084,1113,1127,1179,1181,1197,587))#
AC06#
#
AC07=make.seq(AFS_CZRI_73_progeny.fam,c(33,50,424,539,598,683,828,1050,1064,1072,1178))#
AC07#
#
AC08=make.seq(AFS_CZRI_73_progeny.fam,c(29,345,347,403,419,552,603,619,811,1012,1081,1184,1204,1207))#
AC08#
#
AC10=make.seq(AFS_CZRI_73_progeny.fam,c(338,342,348,355,414,447,448,677,697,703,704,778))#
AC10#
#
AC11=make.seq(AFS_CZRI_73_progeny.fam,c(26,486,537,559,657,842,1079))#
AC11#
#
AC12=make.seq(AFS_CZRI_73_progeny.fam,c(510,607,728,1063,1076,1116,1134))#
AC12#
#
AC13=make.seq(AFS_CZRI_73_progeny.fam,c(343,353,359,384,400,409,413,452,528,565,584,601,609,636,666,708,790,791,814,859,1024,1045,1054,1203,393))#
AC13#
#
AC14=make.seq(AFS_CZRI_73_progeny.fam,c(5,7,335,346,459,473,594,600,617,651,789,802,807,841,1038,1093,1114,1128,1130))#
AC14#
#
AC15=make.seq(AFS_CZRI_73_progeny.fam,c(32,331,340,361,417,425,430,460,573,588,602,646,665,679,718,784,803,816,846,1023,1069,1071,1182,1196,1041))#
AC15#
#
AC16=make.seq(AFS_CZRI_73_progeny.fam,c(371,375,378,480,523,525,579,631,738,879,887,890,1030,1068,1080,1140))#
AC16#
#
AC17=make.seq(AFS_CZRI_73_progeny.fam,c(449,488,822,1058,1062,1126,548,839,1022,613))#
AC17#
#
AC18=make.seq(AFS_CZRI_73_progeny.fam,c(34,511,545,555,606,655,739,838,1037))#
AC18#
#
AC20a_b=make.seq(AFS_CZRI_73_progeny.fam,c(25,37,390,462,497,534,546,638,731,854,35,373,420,440,443,516,542,593,637,649,654,660,724,804,808,829,1078,1123,1172,1086,1194,650))#
AC20a_b#
#
AC22=make.seq(AFS_CZRI_73_progeny.fam,c(3,38,385,456,618,620,759))#
AC22#
#
AC23=make.seq(AFS_CZRI_73_progeny.fam,c(376,429,470,478,489,492,633,795,797,1042,1070,1083,1176,471))#
AC23#
#
AC24=make.seq(AFS_CZRI_73_progeny.fam,c(332,389,397,465,483,540,568,668,711,751,805,819,1010,1031,1120,564))#
AC24#
#
AC25=make.seq(AFS_CZRI_73_progeny.fam,c(379,380,408,415,428,527,585,592,605,640,695,735,825,884,1000,1003,1009,1011,1170,1185))#
AC25#
#
AC26=make.seq(AFS_CZRI_73_progeny.fam,c(351,352,360,463,481,499,526,639,755,758,880,1016,1048,1073,1102))#
AC26#
#
AC27=make.seq(AFS_CZRI_73_progeny.fam,c(411,468,469,493,507,524,532,554,571,578,611,775,786,1001,1032,1117,1121))#
AC27#
#
AC28=make.seq(AFS_CZRI_73_progeny.fam,c(391,583,1171))#
AC28#
#
AC29=make.seq(AFS_CZRI_73_progeny.fam,c(362,418,439,442,509,517,533,586,596,663,715,730,831,1002,1174,538))#
AC29#
#
AC30=make.seq(AFS_CZRI_73_progeny.fam,c(336,344,387,444,485,514,572,595,629,685,765,857,1008,1013,1018,1052,1059,1119))#
AC30#
#
AC31=make.seq(AFS_CZRI_73_progeny.fam,c(6,374,392,394,436,476,544,623,634,744,820,848,872,885,1005,1067,1087,1107,1109))#
AC31#
#
AC32=make.seq(AFS_CZRI_73_progeny.fam,c(349,395,454,477,479,512,551,672,806,1014,1044,1066,1075,1094,1097,502))#
AC32#
#
AC33=make.seq(AFS_CZRI_73_progeny.fam,c(329,333,370,372,382,457,495,506,543,549,561,567,643,652,667,674,698,871,1019,1021,1060,1082,1090,1132))#
AC33#
#
AC34=make.seq(AFS_CZRI_73_progeny.fam,c(330,635,878,498))#
AC34#
#
AC35=make.seq(AFS_CZRI_73_progeny.fam,c(339,354,404,437,438,491,508,522,536,604,608,626,818,877,1020,1029,1092,1131,1173))#
AC35#
#
AC36=make.seq(AFS_CZRI_73_progeny.fam,c(13,398,503,529,562,599,610,658,1036,1040,1108,505))#
AC36#
#
AC37=make.seq(AFS_CZRI_73_progeny.fam,c(47,435,461,501,625,699,745,788,1051,1136))#
AC37#
#
ALG_11_ale_1=make.seq(AFS_CZRI_73_progeny.fam,c(8))#
ALG_11_ale_1#
#
ALG_16_ale_2=make.seq(AFS_CZRI_73_progeny.fam,c(1088,1177))#
ALG_16_ale_2#
#
ALG_21_ale_2=make.seq(AFS_CZRI_73_progeny.fam,c(800))#
ALG_21_ale_2#
#
ALG_25_ale_2=make.seq(AFS_CZRI_73_progeny.fam,c(576))#
ALG_25_ale_2#
#
ALG_28_ale_1=make.seq(AFS_CZRI_73_progeny.fam,c(624))#
ALG_28_ale_1#
#
ALG_28_ale_3=make.seq(AFS_CZRI_73_progeny.fam,c(1055))#
ALG_28_ale_3#
#
ALG_3_ale_2=make.seq(AFS_CZRI_73_progeny.fam,c(410))#
ALG_3_ale_2#
#
Stray_ale_group_1=make.seq(AFS_CZRI_73_progeny.fam,c(357))#
Stray_ale_group_1#
#
UNK=make.seq(AFS_CZRI_73_progeny.fam,c(42,656,43,589,870,363,484,377,761,399,693,453,628,569,748,1006,1202,1077,1106,46,401,406,412,580,754,821,858,875,1129,1169))#
UNK#
#
unlinked=make.seq(AFS_CZRI_73_progeny.fam,c(4,31,44,364,383,386,396,402,426,467,535,632,642,694,707,723,750,792,881,1026,1035,1049,1056,1065))#
unlinked#
AC01_21=make.seq(AFS_CZRI_73_progeny.fam,c(154,184,239,929,1160,1201,115,159,926,984))#
AC01_21#
#
AC02=make.seq(AFS_CZRI_73_progeny.fam,c(17,279,895,898))#
AC02#
#
AC03=make.seq(AFS_CZRI_73_progeny.fam,c(48,116,1206,298,799,973))#
AC03#
#
AC04p=make.seq(AFS_CZRI_73_progeny.fam,c(151,325,757,1095))#
AC04p#
#
AC04q=make.seq(AFS_CZRI_73_progeny.fam,c(63,125,126,167,170,204,214,219,692,747,850,907,913,927,966,968,995,1115,1137,1151,1200,183,257,867,916,40))#
AC04q#
#
AC05=make.seq(AFS_CZRI_73_progeny.fam,c(710))#
AC05#
#
AC06=make.seq(AFS_CZRI_73_progeny.fam,c(23,944,112,1163,200,1125,210,826,902,1098,139))#
AC06#
#
AC07=make.seq(AFS_CZRI_73_progeny.fam,c(36,119,262,830,888,1146))#
AC07#
#
AC08=make.seq(AFS_CZRI_73_progeny.fam,c(110,729,856,1199,263,316,781,1111,323,732))#
AC08#
#
AC09=make.seq(AFS_CZRI_73_progeny.fam,c(81,269,673))#
AC09#
#
AC10=make.seq(AFS_CZRI_73_progeny.fam,c(121,149,690))#
AC10#
#
AC11=make.seq(AFS_CZRI_73_progeny.fam,c(317,743,988,1138))#
AC11#
#
AC12=make.seq(AFS_CZRI_73_progeny.fam,c(102,905))#
AC12#
#
AC13=make.seq(AFS_CZRI_73_progeny.fam,c(294,904,1099))#
AC13#
#
AC14=make.seq(AFS_CZRI_73_progeny.fam,c(2,19,27,28,54,57,77,130,152,156,229,289,301,307,312,314,709,776,779,813,834,941,942,946,964,999,1142,1159,1191,129,770,951,1148))#
AC14#
#
AC15=make.seq(AFS_CZRI_73_progeny.fam,c(89,133,226,259,266,318,720,864,920,948,961,997,1158))#
AC15#
#
AC16=make.seq(AFS_CZRI_73_progeny.fam,c(39,66,78,127,161,206,222,238,258,272,302,659,689,912,981,1193,59,168,273,716,1091,1154,98,136,188))#
AC16#
#
AC17=make.seq(AFS_CZRI_73_progeny.fam,c(203,252,282,327,910,914,956,967))#
AC17#
#
AC18=make.seq(AFS_CZRI_73_progeny.fam,c(11,52,100,143,687,688,144,209,217,237,247,278,684,847,869,894,1096,297,664,943,953,954,958,234,276,976))#
AC18#
#
AC19=make.seq(AFS_CZRI_73_progeny.fam,c(60,190,742,833,933,959,1165,1189))#
AC19#
#
AC20a=make.seq(AFS_CZRI_73_progeny.fam,c(22,246,274,705,947,678,1156))#
AC20a#
#
AC20b=make.seq(AFS_CZRI_73_progeny.fam,c(74,117,137,187,240,300,319,727,734,836,980,985,1141,141,173,180,260,280,288,291,303,311,313,328,756,762,812,911,969,989,1105,1110,1161,87))#
AC20b#
#
AC22=make.seq(AFS_CZRI_73_progeny.fam,c(30,69,82,128,194,228,281,671,752,815,1162,1195))#
AC22#
#
AC23=make.seq(AFS_CZRI_73_progeny.fam,c(56,201,934,952,983))#
AC23#
#
AC24=make.seq(AFS_CZRI_73_progeny.fam,c(73,286,682,777,892,939))#
AC24#
#
AC25=make.seq(AFS_CZRI_73_progeny.fam,c(163,251,309,726,740,321))#
AC25#
#
AC26=make.seq(AFS_CZRI_73_progeny.fam,c(55,61,199,1164,1183,123,1190))#
AC26#
#
AC27=make.seq(AFS_CZRI_73_progeny.fam,c(68,113,169,202,277,843,900,919,1150,982))#
AC27#
#
AC28=make.seq(AFS_CZRI_73_progeny.fam,c(51,131,148,166,186,192,196,205,212,714,853,855,923,975))#
AC28#
#
AC29=make.seq(AFS_CZRI_73_progeny.fam,c(1168))#
AC29#
#
AC30=make.seq(AFS_CZRI_73_progeny.fam,c(21,882,897,71,746,287,315,899,998))#
AC30#
#
AC31=make.seq(AFS_CZRI_73_progeny.fam,c(53,70,88,94,175,179,231,780,917,938,996,1145,105,218,686,886,213,868))#
AC31#
#
AC32=make.seq(AFS_CZRI_73_progeny.fam,c(9,268,769,970,84,95,198,221,261,267,852,979,97,176,165,185,896,931,223))#
AC32#
#
AC33=make.seq(AFS_CZRI_73_progeny.fam,c(124,250,255,275,326,701,824,827,903,930,949,962,1103,1122,1149,1187,950))#
AC33#
#
AC34=make.seq(AFS_CZRI_73_progeny.fam,c(171,863,971,1133))#
AC34#
#
AC35=make.seq(AFS_CZRI_73_progeny.fam,c(41,235,832,915,932,978,1124,1135,721,793,849))#
AC35#
#
AC36=make.seq(AFS_CZRI_73_progeny.fam,c(147,249,256,308,722,908,921,991,132))#
AC36#
#
AC37=make.seq(AFS_CZRI_73_progeny.fam,c(10,65,92,120,227,253,304,324,90,893,241))#
AC37#
#
ALG_16_female_2=make.seq(AFS_CZRI_73_progeny.fam,c(160))#
ALG_16_female_2#
#
ALG_26_female_2=make.seq(AFS_CZRI_73_progeny.fam,c(254,860))#
ALG_26_female_2#
#
ALG_26_female_3=make.seq(AFS_CZRI_73_progeny.fam,c(181,295,794,197,1166,1157,1198))#
ALG_26_female_3#
#
ALG_28_female_2=make.seq(AFS_CZRI_73_progeny.fam,c(80))#
ALG_28_female_2#
#
ALG_28_female_4=make.seq(AFS_CZRI_73_progeny.fam,c(122,150,232,785,936,963))#
ALG_28_female_4#
#
ALG_3_female_2=make.seq(AFS_CZRI_73_progeny.fam,c(75))#
ALG_3_female_2#
#
ALG_30_female_2=make.seq(AFS_CZRI_73_progeny.fam,c(145))#
ALG_30_female_2#
#
ALG_32_female_2=make.seq(AFS_CZRI_73_progeny.fam,c(215,928))#
ALG_32_female_2#
#
Stray__female_group_10=make.seq(AFS_CZRI_73_progeny.fam,c(945))#
Stray__female_group_10#
#
Stray__female_group_11=make.seq(AFS_CZRI_73_progeny.fam,c(140,773,965))#
Stray__female_group_11#
#
Stray__female_group_12=make.seq(AFS_CZRI_73_progeny.fam,c(91,208,243,763,901,972,992,1100,1144,1167,109,164,293,957))#
Stray__female_group_12#
#
Stray__female_group_13=make.seq(AFS_CZRI_73_progeny.fam,c(76,225,157,696,960))#
Stray__female_group_13#
#
Stray__female_group_14=make.seq(AFS_CZRI_73_progeny.fam,c(83,193,986,990,299,993,1205))#
Stray__female_group_14#
#
Stray__female_group_15=make.seq(AFS_CZRI_73_progeny.fam,c(58,994,195,236,772,909))#
Stray__female_group_15#
#
Stray__female_group_16=make.seq(AFS_CZRI_73_progeny.fam,c(138,783))#
Stray__female_group_16#
#
Stray__female_group_18=make.seq(AFS_CZRI_73_progeny.fam,c(146,264))#
Stray__female_group_18#
#
Stray__female_group_19=make.seq(AFS_CZRI_73_progeny.fam,c(101))#
Stray__female_group_19#
#
Stray__female_group_3=make.seq(AFS_CZRI_73_progeny.fam,c(142))#
Stray__female_group_3#
#
Stray__female_group_7=make.seq(AFS_CZRI_73_progeny.fam,c(285))#
Stray__female_group_7#
#
Stray__female_group_9=make.seq(AFS_CZRI_73_progeny.fam,c(177,977,1112))#
Stray__female_group_9
library("onemap")
load("CZRI_ZRC_ID.RData")
AC01_21=make.seq(AFS_CZRI_73_progeny.fam,c(14,24,350,365,366,367,368,381,451,455,466,482,490,494,520,531,541,550,556,557,558,574,575,581,612,616,630,648,681,702,712,725,737,749,787,844,1089,20,798,405,423,434,519,614,645,647,669,706,764,796,1007,1015,1101,1118,441,627,760,1033,496,504,341))#
AC01_21#
#
AC02=make.seq(AFS_CZRI_73_progeny.fam,c(337,421,427,433,474,553,560,582,653,809,873,1025,1043,1046,1104,1180,1186,431))#
AC02#
#
AC03=make.seq(AFS_CZRI_73_progeny.fam,c(388,446,458,464,475,515,577,590,641,1027,1061,1085,422,591))#
AC03#
#
AC04p=make.seq(AFS_CZRI_73_progeny.fam,c(334,369,416,445,450,530,566,570,865,876,1047,1053,1175,1188))#
AC04p#
#
AC04q=make.seq(AFS_CZRI_73_progeny.fam,c(356,358,407,472,597,615,621,644,661,753,840,851,1039,1057,1074))#
AC04q#
#
AC05=make.seq(AFS_CZRI_73_progeny.fam,c(487,513,518,823,874,1017))#
AC05#
#
AC06=make.seq(AFS_CZRI_73_progeny.fam,c(432,500,521,547,563,622,670,700,810,837,845,1004,1028,1034,1084,1113,1127,1179,1181,1197,587))#
AC06#
#
AC07=make.seq(AFS_CZRI_73_progeny.fam,c(33,50,424,539,598,683,828,1050,1064,1072,1178))#
AC07#
#
AC08=make.seq(AFS_CZRI_73_progeny.fam,c(29,345,347,403,419,552,603,619,811,1012,1081,1184,1204,1207))#
AC08#
#
AC10=make.seq(AFS_CZRI_73_progeny.fam,c(338,342,348,355,414,447,448,677,697,703,704,778))#
AC10#
#
AC11=make.seq(AFS_CZRI_73_progeny.fam,c(26,486,537,559,657,842,1079))#
AC11#
#
AC12=make.seq(AFS_CZRI_73_progeny.fam,c(510,607,728,1063,1076,1116,1134))#
AC12#
#
AC13=make.seq(AFS_CZRI_73_progeny.fam,c(343,353,359,384,400,409,413,452,528,565,584,601,609,636,666,708,790,791,814,859,1024,1045,1054,1203,393))#
AC13#
#
AC14=make.seq(AFS_CZRI_73_progeny.fam,c(5,7,335,346,459,473,594,600,617,651,789,802,807,841,1038,1093,1114,1128,1130))#
AC14#
#
AC15=make.seq(AFS_CZRI_73_progeny.fam,c(32,331,340,361,417,425,430,460,573,588,602,646,665,679,718,784,803,816,846,1023,1069,1071,1182,1196,1041))#
AC15#
#
AC16=make.seq(AFS_CZRI_73_progeny.fam,c(371,375,378,480,523,525,579,631,738,879,887,890,1030,1068,1080,1140))#
AC16#
#
AC17=make.seq(AFS_CZRI_73_progeny.fam,c(449,488,822,1058,1062,1126,548,839,1022,613))#
AC17#
#
AC18=make.seq(AFS_CZRI_73_progeny.fam,c(34,511,545,555,606,655,739,838,1037))#
AC18#
#
AC20a_b=make.seq(AFS_CZRI_73_progeny.fam,c(25,37,390,462,497,534,546,638,731,854,35,373,420,440,443,516,542,593,637,649,654,660,724,804,808,829,1078,1123,1172,1086,1194,650))#
AC20a_b#
#
AC22=make.seq(AFS_CZRI_73_progeny.fam,c(3,38,385,456,618,620,759))#
AC22#
#
AC23=make.seq(AFS_CZRI_73_progeny.fam,c(376,429,470,478,489,492,633,795,797,1042,1070,1083,1176,471))#
AC23#
#
AC24=make.seq(AFS_CZRI_73_progeny.fam,c(332,389,397,465,483,540,568,668,711,751,805,819,1010,1031,1120,564))#
AC24#
#
AC25=make.seq(AFS_CZRI_73_progeny.fam,c(379,380,408,415,428,527,585,592,605,640,695,735,825,884,1000,1003,1009,1011,1170,1185))#
AC25#
#
AC26=make.seq(AFS_CZRI_73_progeny.fam,c(351,352,360,463,481,499,526,639,755,758,880,1016,1048,1073,1102))#
AC26#
#
AC27=make.seq(AFS_CZRI_73_progeny.fam,c(411,468,469,493,507,524,532,554,571,578,611,775,786,1001,1032,1117,1121))#
AC27#
#
AC28=make.seq(AFS_CZRI_73_progeny.fam,c(391,583,1171))#
AC28#
#
AC29=make.seq(AFS_CZRI_73_progeny.fam,c(362,418,439,442,509,517,533,586,596,663,715,730,831,1002,1174,538))#
AC29#
#
AC30=make.seq(AFS_CZRI_73_progeny.fam,c(336,344,387,444,485,514,572,595,629,685,765,857,1008,1013,1018,1052,1059,1119))#
AC30#
#
AC31=make.seq(AFS_CZRI_73_progeny.fam,c(6,374,392,394,436,476,544,623,634,744,820,848,872,885,1005,1067,1087,1107,1109))#
AC31#
#
AC32=make.seq(AFS_CZRI_73_progeny.fam,c(349,395,454,477,479,512,551,672,806,1014,1044,1066,1075,1094,1097,502))#
AC32#
#
AC33=make.seq(AFS_CZRI_73_progeny.fam,c(329,333,370,372,382,457,495,506,543,549,561,567,643,652,667,674,698,871,1019,1021,1060,1082,1090,1132))#
AC33#
#
AC34=make.seq(AFS_CZRI_73_progeny.fam,c(330,635,878,498))#
AC34#
#
AC35=make.seq(AFS_CZRI_73_progeny.fam,c(339,354,404,437,438,491,508,522,536,604,608,626,818,877,1020,1029,1092,1131,1173))#
AC35#
#
AC36=make.seq(AFS_CZRI_73_progeny.fam,c(13,398,503,529,562,599,610,658,1036,1040,1108,505))#
AC36#
#
AC37=make.seq(AFS_CZRI_73_progeny.fam,c(47,435,461,501,625,699,745,788,1051,1136))#
AC37#
#
ALG_11_ale_1=make.seq(AFS_CZRI_73_progeny.fam,c(8))#
ALG_11_ale_1#
#
ALG_16_ale_2=make.seq(AFS_CZRI_73_progeny.fam,c(1088,1177))#
ALG_16_ale_2#
#
ALG_21_ale_2=make.seq(AFS_CZRI_73_progeny.fam,c(800))#
ALG_21_ale_2#
#
ALG_25_ale_2=make.seq(AFS_CZRI_73_progeny.fam,c(576))#
ALG_25_ale_2#
#
ALG_28_ale_1=make.seq(AFS_CZRI_73_progeny.fam,c(624))#
ALG_28_ale_1#
#
ALG_28_ale_3=make.seq(AFS_CZRI_73_progeny.fam,c(1055))#
ALG_28_ale_3#
#
ALG_3_ale_2=make.seq(AFS_CZRI_73_progeny.fam,c(410))#
ALG_3_ale_2#
#
Stray_ale_group_1=make.seq(AFS_CZRI_73_progeny.fam,c(357))#
Stray_ale_group_1#
#
UNK=make.seq(AFS_CZRI_73_progeny.fam,c(42,656,43,589,870,363,484,377,761,399,693,453,628,569,748,1006,1202,1077,1106,46,401,406,412,580,754,821,858,875,1129,1169))#
UNK#
#
unlinked=make.seq(AFS_CZRI_73_progeny.fam,c(4,31,44,364,383,386,396,402,426,467,535,632,642,694,707,723,750,792,881,1026,1035,1049,1056,1065))#
unlinked#
AC01_21=make.seq(AFS_CZRI_73_progeny.fam,c(154,184,239,929,1160,1201,115,159,926,984))#
AC01_21#
#
AC02=make.seq(AFS_CZRI_73_progeny.fam,c(17,279,895,898))#
AC02#
#
AC03=make.seq(AFS_CZRI_73_progeny.fam,c(48,116,1206,298,799,973))#
AC03#
#
AC04p=make.seq(AFS_CZRI_73_progeny.fam,c(151,325,757,1095))#
AC04p#
#
AC04q=make.seq(AFS_CZRI_73_progeny.fam,c(63,125,126,167,170,204,214,219,692,747,850,907,913,927,966,968,995,1115,1137,1151,1200,183,257,867,916,40))#
AC04q#
#
AC05=make.seq(AFS_CZRI_73_progeny.fam,c(710))#
AC05#
#
AC06=make.seq(AFS_CZRI_73_progeny.fam,c(23,944,112,1163,200,1125,210,826,902,1098,139))#
AC06#
#
AC07=make.seq(AFS_CZRI_73_progeny.fam,c(36,119,262,830,888,1146))#
AC07#
#
AC08=make.seq(AFS_CZRI_73_progeny.fam,c(110,729,856,1199,263,316,781,1111,323,732))#
AC08#
#
AC09=make.seq(AFS_CZRI_73_progeny.fam,c(81,269,673))#
AC09#
#
AC10=make.seq(AFS_CZRI_73_progeny.fam,c(121,149,690))#
AC10#
#
AC11=make.seq(AFS_CZRI_73_progeny.fam,c(317,743,988,1138))#
AC11#
#
AC12=make.seq(AFS_CZRI_73_progeny.fam,c(102,905))#
AC12#
#
AC13=make.seq(AFS_CZRI_73_progeny.fam,c(294,904,1099))#
AC13#
#
AC14=make.seq(AFS_CZRI_73_progeny.fam,c(2,19,27,28,54,57,77,130,152,156,229,289,301,307,312,314,709,776,779,813,834,941,942,946,964,999,1142,1159,1191,129,770,951,1148))#
AC14#
#
AC15=make.seq(AFS_CZRI_73_progeny.fam,c(89,133,226,259,266,318,720,864,920,948,961,997,1158))#
AC15#
#
AC16=make.seq(AFS_CZRI_73_progeny.fam,c(39,66,78,127,161,206,222,238,258,272,302,659,689,912,981,1193,59,168,273,716,1091,1154,98,136,188))#
AC16#
#
AC17=make.seq(AFS_CZRI_73_progeny.fam,c(203,252,282,327,910,914,956,967))#
AC17#
#
AC18=make.seq(AFS_CZRI_73_progeny.fam,c(11,52,100,143,687,688,144,209,217,237,247,278,684,847,869,894,1096,297,664,943,953,954,958,234,276,976))#
AC18#
#
AC19=make.seq(AFS_CZRI_73_progeny.fam,c(60,190,742,833,933,959,1165,1189))#
AC19#
#
AC20a=make.seq(AFS_CZRI_73_progeny.fam,c(22,246,274,705,947,678,1156))#
AC20a#
#
AC20b=make.seq(AFS_CZRI_73_progeny.fam,c(74,117,137,187,240,300,319,727,734,836,980,985,1141,141,173,180,260,280,288,291,303,311,313,328,756,762,812,911,969,989,1105,1110,1161,87))#
AC20b#
#
AC22=make.seq(AFS_CZRI_73_progeny.fam,c(30,69,82,128,194,228,281,671,752,815,1162,1195))#
AC22#
#
AC23=make.seq(AFS_CZRI_73_progeny.fam,c(56,201,934,952,983))#
AC23#
#
AC24=make.seq(AFS_CZRI_73_progeny.fam,c(73,286,682,777,892,939))#
AC24#
#
AC25=make.seq(AFS_CZRI_73_progeny.fam,c(163,251,309,726,740,321))#
AC25#
#
AC26=make.seq(AFS_CZRI_73_progeny.fam,c(55,61,199,1164,1183,123,1190))#
AC26#
#
AC27=make.seq(AFS_CZRI_73_progeny.fam,c(68,113,169,202,277,843,900,919,1150,982))#
AC27#
#
AC28=make.seq(AFS_CZRI_73_progeny.fam,c(51,131,148,166,186,192,196,205,212,714,853,855,923,975))#
AC28#
#
AC29=make.seq(AFS_CZRI_73_progeny.fam,c(1168))#
AC29#
#
AC30=make.seq(AFS_CZRI_73_progeny.fam,c(21,882,897,71,746,287,315,899,998))#
AC30#
#
AC31=make.seq(AFS_CZRI_73_progeny.fam,c(53,70,88,94,175,179,231,780,917,938,996,1145,105,218,686,886,213,868))#
AC31#
#
AC32=make.seq(AFS_CZRI_73_progeny.fam,c(9,268,769,970,84,95,198,221,261,267,852,979,97,176,165,185,896,931,223))#
AC32#
#
AC33=make.seq(AFS_CZRI_73_progeny.fam,c(124,250,255,275,326,701,824,827,903,930,949,962,1103,1122,1149,1187,950))#
AC33#
#
AC34=make.seq(AFS_CZRI_73_progeny.fam,c(171,863,971,1133))#
AC34#
#
AC35=make.seq(AFS_CZRI_73_progeny.fam,c(41,235,832,915,932,978,1124,1135,721,793,849))#
AC35#
#
AC36=make.seq(AFS_CZRI_73_progeny.fam,c(147,249,256,308,722,908,921,991,132))#
AC36#
#
AC37=make.seq(AFS_CZRI_73_progeny.fam,c(10,65,92,120,227,253,304,324,90,893,241))#
AC37#
#
ALG_16_female_2=make.seq(AFS_CZRI_73_progeny.fam,c(160))#
ALG_16_female_2#
#
ALG_26_female_2=make.seq(AFS_CZRI_73_progeny.fam,c(254,860))#
ALG_26_female_2#
#
ALG_26_female_3=make.seq(AFS_CZRI_73_progeny.fam,c(181,295,794,197,1166,1157,1198))#
ALG_26_female_3#
#
ALG_28_female_2=make.seq(AFS_CZRI_73_progeny.fam,c(80))#
ALG_28_female_2#
#
ALG_28_female_4=make.seq(AFS_CZRI_73_progeny.fam,c(122,150,232,785,936,963))#
ALG_28_female_4#
#
ALG_3_female_2=make.seq(AFS_CZRI_73_progeny.fam,c(75))#
ALG_3_female_2#
#
ALG_30_female_2=make.seq(AFS_CZRI_73_progeny.fam,c(145))#
ALG_30_female_2#
#
ALG_32_female_2=make.seq(AFS_CZRI_73_progeny.fam,c(215,928))#
ALG_32_female_2#
#
Stray__female_group_10=make.seq(AFS_CZRI_73_progeny.fam,c(945))#
Stray__female_group_10#
#
Stray__female_group_11=make.seq(AFS_CZRI_73_progeny.fam,c(140,773,965))#
Stray__female_group_11#
#
Stray__female_group_12=make.seq(AFS_CZRI_73_progeny.fam,c(91,208,243,763,901,972,992,1100,1144,1167,109,164,293,957))#
Stray__female_group_12#
#
Stray__female_group_13=make.seq(AFS_CZRI_73_progeny.fam,c(76,225,157,696,960))#
Stray__female_group_13#
#
Stray__female_group_14=make.seq(AFS_CZRI_73_progeny.fam,c(83,193,986,990,299,993,1205))#
Stray__female_group_14#
#
Stray__female_group_15=make.seq(AFS_CZRI_73_progeny.fam,c(58,994,195,236,772,909))#
Stray__female_group_15#
#
Stray__female_group_16=make.seq(AFS_CZRI_73_progeny.fam,c(138,783))#
Stray__female_group_16#
#
Stray__female_group_18=make.seq(AFS_CZRI_73_progeny.fam,c(146,264))#
Stray__female_group_18#
#
Stray__female_group_19=make.seq(AFS_CZRI_73_progeny.fam,c(101))#
Stray__female_group_19#
#
Stray__female_group_3=make.seq(AFS_CZRI_73_progeny.fam,c(142))#
Stray__female_group_3#
#
Stray__female_group_7=make.seq(AFS_CZRI_73_progeny.fam,c(285))#
Stray__female_group_7#
#
Stray__female_group_9=make.seq(AFS_CZRI_73_progeny.fam,c(177,977,1112))#
Stray__female_group_9
AC01_21=make.seq(CZRI_73_twopt_04 ,c(14,24,350,365,366,367,368,381,451,455,466,482,490,494,520,531,541,550,556,557,558,574,575,581,612,616,630,648,681,702,712,725,737,749,787,844,1089,20,798,405,423,434,519,614,645,647,669,706,764,796,1007,1015,1101,1118,441,627,760,1033,496,504,341))#
AC01_21#
#
AC02=make.seq(CZRI_73_twopt_04 ,c(337,421,427,433,474,553,560,582,653,809,873,1025,1043,1046,1104,1180,1186,431))#
AC02#
#
AC03=make.seq(CZRI_73_twopt_04 ,c(388,446,458,464,475,515,577,590,641,1027,1061,1085,422,591))#
AC03#
#
AC04p=make.seq(CZRI_73_twopt_04 ,c(334,369,416,445,450,530,566,570,865,876,1047,1053,1175,1188))#
AC04p#
#
AC04q=make.seq(CZRI_73_twopt_04 ,c(356,358,407,472,597,615,621,644,661,753,840,851,1039,1057,1074))#
AC04q#
#
AC05=make.seq(CZRI_73_twopt_04 ,c(487,513,518,823,874,1017))#
AC05#
#
AC06=make.seq(CZRI_73_twopt_04 ,c(432,500,521,547,563,622,670,700,810,837,845,1004,1028,1034,1084,1113,1127,1179,1181,1197,587))#
AC06#
#
AC07=make.seq(CZRI_73_twopt_04 ,c(33,50,424,539,598,683,828,1050,1064,1072,1178))#
AC07#
#
AC08=make.seq(CZRI_73_twopt_04 ,c(29,345,347,403,419,552,603,619,811,1012,1081,1184,1204,1207))#
AC08#
#
AC10=make.seq(CZRI_73_twopt_04 ,c(338,342,348,355,414,447,448,677,697,703,704,778))#
AC10#
#
AC11=make.seq(CZRI_73_twopt_04 ,c(26,486,537,559,657,842,1079))#
AC11#
#
AC12=make.seq(CZRI_73_twopt_04 ,c(510,607,728,1063,1076,1116,1134))#
AC12#
#
AC13=make.seq(CZRI_73_twopt_04 ,c(343,353,359,384,400,409,413,452,528,565,584,601,609,636,666,708,790,791,814,859,1024,1045,1054,1203,393))#
AC13#
#
AC14=make.seq(CZRI_73_twopt_04 ,c(5,7,335,346,459,473,594,600,617,651,789,802,807,841,1038,1093,1114,1128,1130))#
AC14#
#
AC15=make.seq(CZRI_73_twopt_04 ,c(32,331,340,361,417,425,430,460,573,588,602,646,665,679,718,784,803,816,846,1023,1069,1071,1182,1196,1041))#
AC15#
#
AC16=make.seq(CZRI_73_twopt_04 ,c(371,375,378,480,523,525,579,631,738,879,887,890,1030,1068,1080,1140))#
AC16#
#
AC17=make.seq(CZRI_73_twopt_04 ,c(449,488,822,1058,1062,1126,548,839,1022,613))#
AC17#
#
AC18=make.seq(CZRI_73_twopt_04 ,c(34,511,545,555,606,655,739,838,1037))#
AC18#
#
AC20a_b=make.seq(CZRI_73_twopt_04 ,c(25,37,390,462,497,534,546,638,731,854,35,373,420,440,443,516,542,593,637,649,654,660,724,804,808,829,1078,1123,1172,1086,1194,650))#
AC20a_b#
#
AC22=make.seq(CZRI_73_twopt_04 ,c(3,38,385,456,618,620,759))#
AC22#
#
AC23=make.seq(CZRI_73_twopt_04 ,c(376,429,470,478,489,492,633,795,797,1042,1070,1083,1176,471))#
AC23#
#
AC24=make.seq(CZRI_73_twopt_04 ,c(332,389,397,465,483,540,568,668,711,751,805,819,1010,1031,1120,564))#
AC24#
#
AC25=make.seq(CZRI_73_twopt_04 ,c(379,380,408,415,428,527,585,592,605,640,695,735,825,884,1000,1003,1009,1011,1170,1185))#
AC25#
#
AC26=make.seq(CZRI_73_twopt_04 ,c(351,352,360,463,481,499,526,639,755,758,880,1016,1048,1073,1102))#
AC26#
#
AC27=make.seq(CZRI_73_twopt_04 ,c(411,468,469,493,507,524,532,554,571,578,611,775,786,1001,1032,1117,1121))#
AC27#
#
AC28=make.seq(CZRI_73_twopt_04 ,c(391,583,1171))#
AC28#
#
AC29=make.seq(CZRI_73_twopt_04 ,c(362,418,439,442,509,517,533,586,596,663,715,730,831,1002,1174,538))#
AC29#
#
AC30=make.seq(CZRI_73_twopt_04 ,c(336,344,387,444,485,514,572,595,629,685,765,857,1008,1013,1018,1052,1059,1119))#
AC30#
#
AC31=make.seq(CZRI_73_twopt_04 ,c(6,374,392,394,436,476,544,623,634,744,820,848,872,885,1005,1067,1087,1107,1109))#
AC31#
#
AC32=make.seq(CZRI_73_twopt_04 ,c(349,395,454,477,479,512,551,672,806,1014,1044,1066,1075,1094,1097,502))#
AC32#
#
AC33=make.seq(CZRI_73_twopt_04 ,c(329,333,370,372,382,457,495,506,543,549,561,567,643,652,667,674,698,871,1019,1021,1060,1082,1090,1132))#
AC33#
#
AC34=make.seq(CZRI_73_twopt_04 ,c(330,635,878,498))#
AC34#
#
AC35=make.seq(CZRI_73_twopt_04 ,c(339,354,404,437,438,491,508,522,536,604,608,626,818,877,1020,1029,1092,1131,1173))#
AC35#
#
AC36=make.seq(CZRI_73_twopt_04 ,c(13,398,503,529,562,599,610,658,1036,1040,1108,505))#
AC36#
#
AC37=make.seq(CZRI_73_twopt_04 ,c(47,435,461,501,625,699,745,788,1051,1136))#
AC37#
#
ALG_11_male_1=make.seq(CZRI_73_twopt_04 ,c(8))#
ALG_11_male_1#
#
ALG_16_male_2=make.seq(CZRI_73_twopt_04 ,c(1088,1177))#
ALG_16_male_2#
#
ALG_21_male_2=make.seq(CZRI_73_twopt_04 ,c(800))#
ALG_21_male_2#
#
ALG_25_male_2=make.seq(CZRI_73_twopt_04 ,c(576))#
ALG_25_male_2#
#
ALG_28_male_1=make.seq(CZRI_73_twopt_04 ,c(624))#
ALG_28_male_1#
#
ALG_28_male_3=make.seq(CZRI_73_twopt_04 ,c(1055))#
ALG_28_male_3#
#
ALG_3_male_2=make.seq(CZRI_73_twopt_04 ,c(410))#
ALG_3_male_2#
#
Stray_male_group_1=make.seq(CZRI_73_twopt_04 ,c(357))#
Stray_male_group_1#
#
UNK=make.seq(CZRI_73_twopt_04 ,c(42,656,43,589,870,363,484,377,761,399,693,453,628,569,748,1006,1202,1077,1106,46,401,406,412,580,754,821,858,875,1129,1169))#
UNK#
#
unlinked=make.seq(CZRI_73_twopt_04 ,c(4,31,44,364,383,386,396,402,426,467,535,632,642,694,707,723,750,792,881,1026,1035,1049,1056,1065))#
unlinked#
AC01_21=make.seq(CZRI_73_twopt_04 ,c(154,184,239,929,1160,1201,115,159,926,984))#
AC01_21#
#
AC02=make.seq(CZRI_73_twopt_04 ,c(17,279,895,898))#
AC02#
#
AC03=make.seq(CZRI_73_twopt_04 ,c(48,116,1206,298,799,973))#
AC03#
#
AC04p=make.seq(CZRI_73_twopt_04 ,c(151,325,757,1095))#
AC04p#
#
AC04q=make.seq(CZRI_73_twopt_04 ,c(63,125,126,167,170,204,214,219,692,747,850,907,913,927,966,968,995,1115,1137,1151,1200,183,257,867,916,40))#
AC04q#
#
AC05=make.seq(CZRI_73_twopt_04 ,c(710))#
AC05#
#
AC06=make.seq(CZRI_73_twopt_04 ,c(23,944,112,1163,200,1125,210,826,902,1098,139))#
AC06#
#
AC07=make.seq(CZRI_73_twopt_04 ,c(36,119,262,830,888,1146))#
AC07#
#
AC08=make.seq(CZRI_73_twopt_04 ,c(110,729,856,1199,263,316,781,1111,323,732))#
AC08#
#
AC09=make.seq(CZRI_73_twopt_04 ,c(81,269,673))#
AC09#
#
AC10=make.seq(CZRI_73_twopt_04 ,c(121,149,690))#
AC10#
#
AC11=make.seq(CZRI_73_twopt_04 ,c(317,743,988,1138))#
AC11#
#
AC12=make.seq(CZRI_73_twopt_04 ,c(102,905))#
AC12#
#
AC13=make.seq(CZRI_73_twopt_04 ,c(294,904,1099))#
AC13#
#
AC14=make.seq(CZRI_73_twopt_04 ,c(2,19,27,28,54,57,77,130,152,156,229,289,301,307,312,314,709,776,779,813,834,941,942,946,964,999,1142,1159,1191,129,770,951,1148))#
AC14#
#
AC15=make.seq(CZRI_73_twopt_04 ,c(89,133,226,259,266,318,720,864,920,948,961,997,1158))#
AC15#
#
AC16=make.seq(CZRI_73_twopt_04 ,c(39,66,78,127,161,206,222,238,258,272,302,659,689,912,981,1193,59,168,273,716,1091,1154,98,136,188))#
AC16#
#
AC17=make.seq(CZRI_73_twopt_04 ,c(203,252,282,327,910,914,956,967))#
AC17#
#
AC18=make.seq(CZRI_73_twopt_04 ,c(11,52,100,143,687,688,144,209,217,237,247,278,684,847,869,894,1096,297,664,943,953,954,958,234,276,976))#
AC18#
#
AC19=make.seq(CZRI_73_twopt_04 ,c(60,190,742,833,933,959,1165,1189))#
AC19#
#
AC20a=make.seq(CZRI_73_twopt_04 ,c(22,246,274,705,947,678,1156))#
AC20a#
#
AC20b=make.seq(CZRI_73_twopt_04 ,c(74,117,137,187,240,300,319,727,734,836,980,985,1141,141,173,180,260,280,288,291,303,311,313,328,756,762,812,911,969,989,1105,1110,1161,87))#
AC20b#
#
AC22=make.seq(CZRI_73_twopt_04 ,c(30,69,82,128,194,228,281,671,752,815,1162,1195))#
AC22#
#
AC23=make.seq(CZRI_73_twopt_04 ,c(56,201,934,952,983))#
AC23#
#
AC24=make.seq(CZRI_73_twopt_04 ,c(73,286,682,777,892,939))#
AC24#
#
AC25=make.seq(CZRI_73_twopt_04 ,c(163,251,309,726,740,321))#
AC25#
#
AC26=make.seq(CZRI_73_twopt_04 ,c(55,61,199,1164,1183,123,1190))#
AC26#
#
AC27=make.seq(CZRI_73_twopt_04 ,c(68,113,169,202,277,843,900,919,1150,982))#
AC27#
#
AC28=make.seq(CZRI_73_twopt_04 ,c(51,131,148,166,186,192,196,205,212,714,853,855,923,975))#
AC28#
#
AC29=make.seq(CZRI_73_twopt_04 ,c(1168))#
AC29#
#
AC30=make.seq(CZRI_73_twopt_04 ,c(21,882,897,71,746,287,315,899,998))#
AC30#
#
AC31=make.seq(CZRI_73_twopt_04 ,c(53,70,88,94,175,179,231,780,917,938,996,1145,105,218,686,886,213,868))#
AC31#
#
AC32=make.seq(CZRI_73_twopt_04 ,c(9,268,769,970,84,95,198,221,261,267,852,979,97,176,165,185,896,931,223))#
AC32#
#
AC33=make.seq(CZRI_73_twopt_04 ,c(124,250,255,275,326,701,824,827,903,930,949,962,1103,1122,1149,1187,950))#
AC33#
#
AC34=make.seq(CZRI_73_twopt_04 ,c(171,863,971,1133))#
AC34#
#
AC35=make.seq(CZRI_73_twopt_04 ,c(41,235,832,915,932,978,1124,1135,721,793,849))#
AC35#
#
AC36=make.seq(CZRI_73_twopt_04 ,c(147,249,256,308,722,908,921,991,132))#
AC36#
#
AC37=make.seq(CZRI_73_twopt_04 ,c(10,65,92,120,227,253,304,324,90,893,241))#
AC37#
#
ALG_16_female_2=make.seq(CZRI_73_twopt_04 ,c(160))#
ALG_16_female_2#
#
ALG_26_female_2=make.seq(CZRI_73_twopt_04 ,c(254,860))#
ALG_26_female_2#
#
ALG_26_female_3=make.seq(CZRI_73_twopt_04 ,c(181,295,794,197,1166,1157,1198))#
ALG_26_female_3#
#
ALG_28_female_2=make.seq(CZRI_73_twopt_04 ,c(80))#
ALG_28_female_2#
#
ALG_28_female_4=make.seq(CZRI_73_twopt_04 ,c(122,150,232,785,936,963))#
ALG_28_female_4#
#
ALG_3_female_2=make.seq(CZRI_73_twopt_04 ,c(75))#
ALG_3_female_2#
#
ALG_30_female_2=make.seq(CZRI_73_twopt_04 ,c(145))#
ALG_30_female_2#
#
ALG_32_female_2=make.seq(CZRI_73_twopt_04 ,c(215,928))#
ALG_32_female_2#
#
Stray__female_group_10=make.seq(CZRI_73_twopt_04 ,c(945))#
Stray__female_group_10#
#
Stray__female_group_11=make.seq(CZRI_73_twopt_04 ,c(140,773,965))#
Stray__female_group_11#
#
Stray__female_group_12=make.seq(CZRI_73_twopt_04 ,c(91,208,243,763,901,972,992,1100,1144,1167,109,164,293,957))#
Stray__female_group_12#
#
Stray__female_group_13=make.seq(CZRI_73_twopt_04 ,c(76,225,157,696,960))#
Stray__female_group_13#
#
Stray__female_group_14=make.seq(CZRI_73_twopt_04 ,c(83,193,986,990,299,993,1205))#
Stray__female_group_14#
#
Stray__female_group_15=make.seq(CZRI_73_twopt_04 ,c(58,994,195,236,772,909))#
Stray__female_group_15#
#
Stray__female_group_16=make.seq(CZRI_73_twopt_04 ,c(138,783))#
Stray__female_group_16#
#
Stray__female_group_18=make.seq(CZRI_73_twopt_04 ,c(146,264))#
Stray__female_group_18#
#
Stray__female_group_19=make.seq(CZRI_73_twopt_04 ,c(101))#
Stray__female_group_19#
#
Stray__female_group_3=make.seq(CZRI_73_twopt_04 ,c(142))#
Stray__female_group_3#
#
Stray__female_group_7=make.seq(CZRI_73_twopt_04 ,c(285))#
Stray__female_group_7#
#
Stray__female_group_9=make.seq(CZRI_73_twopt_04 ,c(177,977,1112))#
Stray__female_group_9
2-2*pt(0.317,14)
iris
species_setosa<-subset(iris,Species=="setosa")
species_setosa
unique(iris$Species)
for(i in unique(iris$Species)){#
	print(i)#
}
for(i in unique(iris$Species)){#
	name = paste(i,"_dataframe")#
	print(name)#
}
for(i in unique(iris$Species)){#
	name = paste(i,"_dataframe",sep="")#
	print(name)#
}
for(i in unique(iris$Species)){#
	name = paste("_dataframe",i,sep="")#
	print(name)#
}
for(i in unique(iris$Species)){#
	name = paste("dataframe_",i,sep="")#
	species_x = subset(iris,Species==i)#
	name = species_x#
}
dataframe_setosa
for(i in unique(iris$Species)){#
	paste("dataframe_",i,sep="") = subset(iris,Species==i)#
#
}
for(i in unique(iris$Species)){#
	name = paste("dataframe_",i,sep="")#
	species_x = subset(iris,Species==i)#
	assign(name, species_x)#
}
dataframe_setosa
x <- rnorm(10000)#
plot(ecdf(x))
plot(ecdf(x), main='probabibility of moving in a given recombination')
map_data("world")
library(viridis)
install.packages('viridis')
map_data("world")
library(gridExtra)
map_data("world")
library(ggplot2)
map_data("world")
library(dplyr)
library(maps)
library(ggjoy)
library(maps)
install.packages('maps')
library(maps)
map_data("world")
countries_map <-map_data("world")#
world_map<-ggplot() + #
  geom_map(data = countries_map, #
           map = countries_map,aes(x = 17, y = 38, map_id = region, group = group),#
           fill = "white", color = "black", size = 0.1)
countries_map <-map_data("world")#
world_map<-ggplot() + #
  geom_map(data = countries_map, #
           map = countries_map,aes(x =17., y = 38., map_id = region, group = group),#
           fill = "white", color = "black", size = 0.1)
countries_map <-map_data("world")#
world_map<-ggplot() + #
  geom_map(data = countries_map, #
           map = countries_map,aes(x =c(17.), y =c(38.), map_id = region, group = group),#
           fill = "white", color = "black", size = 0.1)
countries_map <-map_data("world")#
world_map<-ggplot() + #
  geom_map(data = countries_map, #
           map = countries_map,aes(x=29.38421, y=-98.581082, map_id = region, group = group),#
           fill = "white", color = "black", size = 0.1)
world_map + geom_point(data=df,aes(x= 29.38421,y= 98.581082),alpha=.5,size=.25) + theme_fivethirtyeight() + ggtitle('Location of UFO sightings')
world_map + geom_point(data=df,aes(x= 29.38421,y= 98.581082),alpha=.5,size=.25)  + ggtitle('Location of UFO sightings')
countries_map <-map_data("world")#
world_map<-ggplot() + #
  geom_map(data = countries_map, #
           map = countries_map,aes(x=long, y=lat, map_id = region, group = group),#
           fill = "white", color = "black", size = 0.1)
library(maps)
countries_map <-map_data("world")
library(maps)
countries_map <-map_data("world")
map_data("world")
library(maps)
countries_map = map_data("world")
map_data("world")
install.packages('maps')
library(maps)
countries_map = map_data("world")
?maps
?map_data
?map.data
library(maps)
library('maps')
?map_data
?fread
plate_run_2 = c(53221,9342,20106,24157,53565,4778,68194,11815,41748,119486,51410,12128,38767,53818,33638,50682,46895,110506,3463,37165,150667,33964,49180,58168,38705,53142,37173,94399,29940,13057,20485,34299,24649,85108,71965,63952,36310,87994,40891,103154,44451,70840,51556,70935,22128,50775,72117,16538,83638,72332,90388,33382,44641,47760,4069,82044,69822,133622,35413,94826,91068,87437,49887,71982,13142,80776,74713,27670,68579,35926,63186,111203,80132,85002,88528,76398,45942,33108,21634,101076,34304)
plate_run_1 = c(38978,9500,17378,12885,32325,4525,74956,8543,14346,78270,28736,8086,45822,37834,46254,68033,29732,74177,3404,19422,64956,15026,25660,37824,26079,39523,23926,16298,21616,40384,41094,62879,15926,24834,38269,28770,25834,50387,38127,50312,33362,39613,56258,30438,26635,45125,81609,39352,53629,37250,35914,78926,31224,43586,4241,42496,47844,98034,31275,66236,105394,44570,39025,53562,13119,91912,70598,28373,62814,27609,55395,73761,67937,90499,99437,121000,57920,34850,21719,79686,40000)
t.test(plate_run_1, plate_run_2, paired=TRUE)
setwd('/Users/Cam/Desktop/Code/r_users_group')#
#
#install.packages('tidyverse')#
#this loads up dplyr, ggplot2, tibble, tidyr, readr, purrr and %>%#
library(tidyverse)#
#using some credit card default data from Kaggle as an example#
#https://www.kaggle.com/uciml/default-of-credit-card-clients-dataset/data#
cc_data = read.csv('UCI_Credit_Card.csv')#
head(cc_data)#
names(cc_data)#
sapply(cc_data, class)#
#
cc_dat_readr = read_csv('UCI_Credit_Card.csv')#
head(cc_dat_readr)#
names(cc_dat_readr)#
sapply(cc_dat_readr, class)#
########
# filter for subsetting data#
########
#
#these appear equivalent:#
#assume the dplyr:: is for masking concerns?#
#
# dplyr::filter(cc_dat_readr, PAY_5 > 0)#
x = filter(cc_dat_readr, PAY_5 > 0)#
x#
#
#that is a lot cleaner than base r version of code#
y = cc_dat_readr[cc_dat_readr$PAY_5 > 0,]#
#
#sanity check, they return the same results#
length(x$ID)#
length(y$ID)#
length(cc_dat_readr$ID)#
#######
# find the nas in the dataset#
#######
#
all_missing_list = colnames(cc_dat_readr)[colSums(is.na(cc_dat_readr)) > 0]#
all_missing_list#
cc_dat_readr %>% #
  select_if(function(x) any(is.na(x))) %>%#
  colnames() -> f_all_missing_list#
#
f_all_missing_list#
###########
#Impute the median for columns with missing values#
###########
cc_dat_readr#
new_way_dat = cc_dat_readr#
#
cc_data#
#
#old_way#
for( i in 1:length(f_all_missing_list)){#
	print(f_all_missing_list[i])#
	#get the global median#
	median_all = median(cc_data[, f_all_missing_list[i]], na.rm =TRUE)#
	#inpute the missing values with the column's median#
	cc_data[, f_all_missing_list[i]][is.na(cc_data[, f_all_missing_list[i]])] = median_all#
}
setwd('/Users/Cam/Desktop/Code/r_users_group')#
#
#install.packages('tidyverse')#
#this loads up dplyr, ggplot2, tibble, tidyr, readr, purrr and %>%#
library(tidyverse)#
#using some credit card default data from Kaggle as an example#
#https://www.kaggle.com/uciml/default-of-credit-card-clients-dataset/data#
cc_data = read.csv('UCI_Credit_Card.csv')#
head(cc_data)#
names(cc_data)#
sapply(cc_data, class)#
#
cc_dat_readr = read_csv('UCI_Credit_Card.csv')#
head(cc_dat_readr)#
names(cc_dat_readr)#
sapply(cc_dat_readr, class)
length(x$ID)#
length(y$ID)#
length(cc_dat_readr$ID)
all_missing_list = colnames(cc_dat_readr)[colSums(is.na(cc_dat_readr)) > 0]#
all_missing_list#
cc_dat_readr %>% #
  select_if(function(x) any(is.na(x))) %>%#
  colnames() -> f_all_missing_list#
#
f_all_missing_list#
###########
#Impute the median for columns with missing values#
###########
cc_dat_readr#
new_way_dat = cc_dat_readr#
#
cc_da
#old_way#
for( i in 1:length(f_all_missing_list)){#
	print(f_all_missing_list[i])#
	#get the global median#
	median_all = median(cc_data[, f_all_missing_list[i]], na.rm =TRUE)#
	#inpute the missing values with the column's median#
	cc_data[, f_all_missing_list[i]][is.na(cc_data[, f_all_missing_list[i]])] = median_all#
}
impute_median <- function(x){#
  ind_na <- is.na(x)#
  x[ind_na] <- median(x[!ind_na])#
  as.numeric(x)#
}
new_way_dat %>% #
  mutate_at(f_all_missing_list, impute_median) -> new_way_dat#
#
new_way_dat %>% #
  select_if(function(x) any(is.na(x))) %>%#
  colnames() -> new_missing_check
new_missing_check
head()
head(new_way_dat)
length(new_way_dat)
length(new_way_dat$ID)
?read_csv
? read_csv
